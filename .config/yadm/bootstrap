#!/bin/sh

# remove output file if it already exists (from a previous run)
OUTPUT_FILEPATH="$HOME/Desktop/dotfiles-output.txt"
rm "$OUTPUT_FILEPATH"

# prompt for install profile
echo "Which kind of setup would you like to do?"
select profile in $(ls $HOME/.yadm/profiles);
do
	# get settings from profile
	. "$HOME/.yadm/profiles/$profile"
	break;
done

# ask whether to apply macOS settings and preferences
echo "Would you like to apply custom macOS settings? (Requires password and restart)"
select answer in "Yes" "No"
do
	case $answer in
		Yes )
			# ask for the administrator password upfront
			sudo -v

			# Keep-alive: update existing `sudo` time stamp until this script has finished
			while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
			. "$HOME/.dotfiles/macos-settings/macos"
			NEED_RESTART="true"
			break;;
		No )
			break;;
	esac
done

# check if Xcode command line tools are installed and install if not
if type xcode-select >&- && xpath=$( xcode-select --print-path ) && test -d "${xpath}" && test -x "${xpath}"; then
	echo "$(tput setaf 2)Xcode command line tools installed and up to date.$(tput setaf 7)"
else
	echo "Installing Xcode command line tools..."
	xcode-select --install
	echo "$(tput setaf 2)Installed.$(tput setaf 7)"
fi

# check if zsh is default shell; switch if not
if [[ $(dscl . -read ~ UserShell | sed 's/UserShell: //') != "/bin/zsh" ]]; then 
	chsh -s /bin/zsh
fi

# install oh-my-zsh if necessary
if [[ ! -d $HOME/.oh-my-zsh ]]; then
	sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

# install and configure powerlevel10k if necessary
if [[ ! -d $HOME/.oh-my-zsh/custom/themes/powerlevel10k ]]; then
	git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
fi

# replace existing .zshrc with one from .dotfiles/shell
if [[ -f $HOME/.zshrc ]]; then
	mv $HOME/.zshrc $HOME/.zshrc-old
fi
ln -s $HOME/.dotfiles/shell/zshrc $HOME/.zshrc

# install/update Homebrew and programs from Brewfile
. "$HOME/.dotfiles/brew/brew-install.sh"

# tell iTerm2 to use saved preferences
defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "~/.dotfiles/iterm2"
defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true

# install/update conda if desired
if [[ $USE_CONDA == "true" ]]; then
	# TODO: check if Conda is installed by looking for appropriate folders, not 
	# just `command -v conda`, since that will fail if for some reason conda has 
	# not been added to PATH

	# update conda if it already exists and if not, install it
	if command -v conda >/dev/null; then
		echo "Updating Conda..."
		conda update -y conda >/dev/null
		echo "$(tput setaf 2)Conda installed and up to date.$(tput setaf 7)"
	else
		echo "Installing Conda..."
		curl -fsSL $CONDA_INSTALLER -o $HOME/Downloads/conda.sh
		sh $HOME/Downloads/conda.sh -p $CONDA_DEST
		rm $HOME/Downloads/conda.sh
		conda init zsh
		echo "$(tput setaf 2)Installed.$(tput setaf 7)"
	fi
fi

# replace Dock with applications and directories in dock-list.txt (if it exists)
. "$HOME/.dotfiles/macos-settings/dock-set.sh"

# restart if necessary
if [[ $NEED_RESTART == "true" ]]; then
	osascript -e 'tell app "loginwindow" to «event aevtrrst»'
fi

# finishing message
echo "$(tput setaf 2)Bootstrap finished.$(tput setaf 7)"
if [[ -e $OUTPUT_FILEPATH ]]; then
	echo "$(tput setaf 3)See $(tput setaf 11)$OUTPUT_FILEPATH$(tput setaf 3) for problems encountered during bootstrap.$(tput setaf 7)"
fi
