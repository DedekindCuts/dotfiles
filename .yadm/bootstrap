#!/bin/bash

# remove output file if it already exists (from a previous run)
OUTPUT_FILEPATH="$HOME/Desktop/dotfiles-output.txt"
rm "$OUTPUT_FILEPATH"

# prompt for install profile
echo "Which kind of setup would you like to do?"
select profile in $(ls $HOME/.yadm/profiles);
do
	# get settings from profile
	. "$HOME/.yadm/profiles/$profile"
	break;
done

# ask whether to apply macOS settings and preferences
echo "Would you like to apply custom macOS settings? (Requires password and restart)"
select answer in "Yes" "No"
do
	case $answer in
		Yes )
			# check if user has admin privileges
			if [[ $USER_ADMIN_PRIVILEGE == "true" ]]; then
				# ask for the administrator password upfront
				sudo -v

				# Keep-alive: update existing `sudo` time stamp until this script has finished
				while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
			else
				# get an admin username
				read -p "Please enter an admin username: " ADMIN_USERNAME
				echo "The password for this admin username may be requested several times."
				echo "Please enter the admin password each time it is requested."
			fi
			. "$HOME/.dotfiles/.macos-settings/.macos"
			NEED_RESTART="true"
			break;;
		No )
			break;;
	esac
done

# check if Xcode command line tools are installed and install if not
if type xcode-select >&- && xpath=$( xcode-select --print-path ) && test -d "${xpath}" && test -x "${xpath}"; then
	echo "$(tput setaf 2)Xcode command line tools installed and up to date.$(tput setaf 7)"
else
	echo "Installing Xcode command line tools..."
	xcode-select --install
	echo "$(tput setaf 2)Installed.$(tput setaf 7)"
fi

# install/update Homebrew and programs from Brewfile if desired
if [[ "$USE_HOMEBREW" == "true" ]]; then
	. "$HOME/.dotfiles/.brew/brew-install.sh"
fi

# install Conda if desired
if [[ "$USE_CONDA" == "true" ]]; then
	. "$HOME/.dotfiles/.conda/conda-install.sh"
fi

# install preferred text editor if not already and apply custom settings
. "$HOME/.dotfiles/.editors/.editor-setup.sh"

# make list of any programs that must be manually installed if they are not already
. "$HOME/.dotfiles/.installs/show-manual-installs.sh"

# replace Dock with applications and directories in dock-list.txt (if it exists)
. "$HOME/.dotfiles/.macos-settings/dock-set.sh"

# restart if necessary
if [[ $NEED_RESTART == "true" ]]; then
	osascript -e 'tell app "loginwindow" to «event aevtrrst»'
fi
